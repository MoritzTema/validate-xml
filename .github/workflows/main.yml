# This is a basic workflow to help you get started with Actions

name: Validate Pull Requests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  validate-xml:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'
      - run: pip install -r requirements.txt    

      # Runs a single command using the runners shell
      - name: Run XML validation
        run: python validateXML.py
  
  validate-user:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run user validation
        if: ${{ github.event.pull_request.user.login }} == ${{ secrets.ALLOWED_USERS}}
        run: echo Pull allowed!
        run: exit 0

      -name: Run user validation
        if: ! ${{ github.event.pull_request.user.login }} == ${{ secrets.ALLOWED_USERS}}
        run: echo Pull not allowed!
        run: exit 1




        # run: | 
        #   if ${{ github.event.pull_request.user.login }} == ${{ secrets.ALLOWED_USERS}}; then
        #     echo Pull allowed!
        #   else
        #     echo Pull not allowed!
        #     exit 1
        #   fi


        #run: echo ${{ github.event.pull_request.user.login }} 
        #run: git log -1 --pretty=format:'%ae' | xargs
